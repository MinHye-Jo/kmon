{"version":3,"sources":["screens/frame/Header.jsx","config/http.js","screens/components/DetailModal.jsx","screens/components/QrModal.jsx","screens/components/QuantityModal.jsx","config/tranLang.js","store/app.js","data/Series1.js","data/Series2.js","screens/Main.jsx","styles/img/guide3.png","styles/img/guide4.png","styles/img/guide5.png","screens/Guide.jsx","screens/Roadmap.jsx","screens/frame/Footer.jsx","App.js","index.js"],"names":["Header","useState","subOpen","setSubOpen","className","onClick","window","location","href","target","rel","to","style","display","axios","create","baseURL","process","timeout","headers","DetailModal","data","open","onClose","onAction","nftNameKor","imgUrl","age","description","nftPrice","targetQuantity","mintCount","closed","collectionData","setCollectionData","soldOut","setSoldOut","remain","setRemain","useEffect","clearInterval","src","alt","name","QrModal","quantityData","address","qrData","setQrData","value","size","type","readOnly","navigator","clipboard","writeText","xmlns","width","height","viewBox","d","quantity","textAlign","QuantityModal","setQuantity","min","max","step","kr","title","desc","jp","en","languageState","atom","key","default","series1Data","selector","set","newValue","id","series2Data","monthName","Main","dday","Date","UTC","now","distanceTime","setDistanceTime","language","useRecoilValue","distance","getTime","date","Math","floor","hour","minutes","second","initDistanceTime","getMonth","getUTCMonth","getDate","getUTCDate","popup1Open","setPopup1Open","popup1Data","setPopup1Data","popup2Open","setPopup2Open","popup2Data","setPopup2Data","popup3Open","setPopup3Open","popup3Data","setInterval","a","openQrModal","getUTCHours","undefined","transData","dangerouslySetInnerHTML","__html","Guide","guide5","guide4","guide3","Roadmap","Footer","App","isIE","isEdge","alert","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c766910.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../../styles/css/style.css\";\n\n\nfunction Header() {\n  // 서브메뉴 제어\n  const [subOpen, setSubOpen] = useState(false);\n\n  // const [language, setLanguage] = useRecoilState(languageState);\n\n  return (\n    <header className=\"headerWrap\">\n      <button className=\"logoTop\" onClick={() => (window.location.href = \"/\")} />\n\n      <div className=\"headerRight\">\n        <div className=\"sns\">\n          <a href=\"https://twitter.com/KmonsterCNFT\" target=\"_blank\" className=\"twitter\" rel=\"noreferrer\"></a>\n          <a href=\"mailto:cardanocomm@gmail.com\" target=\"_blank\" className=\"gmail\" rel=\"noreferrer\"></a>\n        </div>\n        <div className=\"nav\">\n          <Link to=\"/roadmap\" className=\"roadmap\">\n            <div className=\"navIcon\"></div>\n            <div className=\"navText\">Roadmap</div>\n          </Link>\n          <Link to=\"/guide\" className=\"guide\">\n            <div className=\"navIcon\"></div>\n            <div className=\"navText\">Guide</div>\n          </Link>\n          {/* <div className=\"lang\">\n            <div className=\"navIcon\"></div>\n            <div className=\"navText\">\n              <select\n                name=\"language\"\n                onChange={(e) => {\n                  setLanguage(e.target.value);\n                }}\n                value={language}\n              >\n                <option value=\"en\">English</option>\n                <option value=\"kr\">한국어</option>\n                <option value=\"jp\">日本語</option>\n              </select>\n            </div>\n          </div> */}\n        </div>\n        <div>\n          <div className=\"hamburger\" onClick={() => setSubOpen(true)}></div>\n          <div className=\"submenu\" style={{ display: subOpen ? \"block\" : \"none\" }}>\n            <div className=\"close\" onClick={() => setSubOpen(false)}></div>\n            <div className=\"moNav\">\n              <Link to=\"/roadmap\" className=\"roadmap\">\n                <div className=\"navIcon\"></div>\n                <div className=\"navText\">Roadmap</div>\n              </Link>\n              <Link to=\"/guide\" className=\"guide\">\n                <div className=\"navIcon\"></div>\n                <div className=\"navText\">Guide</div>\n              </Link>\n              {/* <div className=\"lang\">\n                <div className=\"navIcon\"></div>\n                <div className=\"navText\">\n                  <select\n                    name=\"language\"\n                    onChange={(e) => {\n                      setLanguage(e.target.value);\n                    }}\n                    value={language}\n                  >\n                    <option value=\"en\">English</option>\n                    <option value=\"kr\">한국어</option>\n                    <option value=\"jp\">日本語</option>\n                  </select>\n                </div>\n              </div> */}\n            </div>\n            <div className=\"moSns\">\n              <a href=\"https://twitter.com/KmonsterCNFT\" target=\"_blank\" className=\"twitter\" rel=\"noreferrer\"></a>\n              <a href=\"mailto:cardanocomm@gmail.com\" target=\"_blank\" className=\"gmail\" rel=\"noreferrer\"></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import axios from \"axios\";\n\nconst axiosConfig = {\n  baseURL: process.env.REACT_APP_BACKEND_HOST,\n  timeout: 60 * 3 * 1000,\n  headers: {},\n};\n\nconst http = axios.create(axiosConfig);\n\nexport default http;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../styles/css/main.scss\";\n\nfunction DetailModal({ data, open, onClose, onAction }) {\n  const [collectionData, setCollectionData] = useState({\n    nftNameKor: \"\",\n    imgUrl: \"\",\n    age: \"\",\n    description: \"\",\n    nftPrice: \"\",\n    targetQuantity: 0,\n    mintCount: 0,\n    closed: false,\n  });\n  const [soldOut, setSoldOut] = useState(false);\n  const [remain, setRemain] = useState(0);\n  const [intervalStop, setIntervalStop] = useState(false)\n\n\n\n  let getRemain = null;\n\n  useEffect(() => {\n\n    // if (open) {\n    //   // 바로 api 실행. \n\n\n    //   getRemain = setInterval(function () {\n    //     if (open) {\n    //       setRemain(333)\n    //     }\n    //   }, 10000);\n    // }\n\n    if (data) {\n      setCollectionData({ ...data });\n      setRemain(data.remain);\n      // soldOut 제어\n      if (data.closed !== null && !data.closed) {\n        if (data.targetQuantity - data.mintCount <= 0) {\n          setSoldOut(true);\n        } else setSoldOut(false);\n      }\n\n      return () => clearInterval(getRemain);\n      // 10초에 한번씩 remain 수치 불러오기.\n      // remainTiktok();\n      // setRemain(9999)\n      /* clearInterval(intervalVal);\n        intervalVal = setInterval(checkSoldOut, 10000);\n        return false; */\n    }\n  }, [data]);\n\n  return (\n    <div className=\"popupWrap\" style={{ display: open ? \"block\" : \"none\" }}>\n      <div className=\"popup1\" style={{ display: open ? \"block\" : \"none\" }}>\n        <button className=\"popupClose\" onClick={() => {\n          onClose()\n        }}></button>\n        <div className=\"popupLeft\">\n          {\n            collectionData.closed === true &&\n            <div className={\"closed\"} style={{ display: \"block\" }}>\n            </div>\n          }\n          {\n            soldOut === true &&\n            <div className={\"soldOut\"} style={{ display: \"block\" }}>\n            </div>\n          }\n          <div></div>\n          <div className=\"popupImg\">\n            <img src={collectionData.imgUrl} alt=\"copy url\" />\n          </div>\n        </div>\n        <div className=\"popupRight\">\n          <div className=\"popupTitle\">{collectionData.name}</div>\n          <div className=\"popupText\">\n            <div className=\"row\">\n              <div className=\"popupSubtitle\">Age</div>\n              <span>{collectionData.age}</span>\n            </div>\n            <div className=\"row\">\n              <div className=\"popupSubtitle\">Story</div>\n            </div>\n            <div className=\"row\">\n              <span>\n                {collectionData.description}\n              </span>\n            </div>\n            <div className=\"row\">\n              <br />\n            </div>\n            <div className=\"row\">\n              <div className=\"popupSubtitle\">Remain</div>\n              <span className=\"blue\">{remain}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"popupBg\" onClick={() => {\n        onClose()\n      }}></div>\n    </div>\n  );\n}\n\nexport default DetailModal;\n","import React, { useState, useEffect } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport \"../../styles/css/main.scss\";\n\nfunction QrModal({ data, quantityData, open, onClose }) {\n  const [qrData, setQrData] = useState({\n    address: \"\",\n    nftPrice: \"\",\n  });\n\n  useEffect(() => {\n    if (data) {\n      setQrData({ ...data });\n    }\n  }, [open]);\n\n  return (\n    <div className=\"popupWrap\" style={{ display: open ? \"block\" : \"none\" }}>\n      <div className=\"popup2\" style={{ display: open ? \"block\" : \"none\" }}>\n        <button className=\"popupClose\" onClick={() => onClose()}></button>\n        <div className=\"popupTitle\">Pending payment confirmation</div>\n        <br />\n        <div className=\"popupText\">\n          Your order has been approved. <br />\n          Send Ada using the information below.\n        </div>\n        <div className=\"popupCode\" style={{ display: \"inline-block\" }}>\n          <QRCode value={qrData.address} size={150} />\n          {/* <QRCode value={\"뿌우~\"} size={150} /> */}\n        </div>\n        <div className=\"popupText\">\n          <div className=\"popupSubtitle\">Address</div>\n          <div className=\"popupBox\">\n            <input type=\"text\" readOnly value={qrData.address} />\n            <button className=\"btnCopy\" onClick={() => navigator.clipboard.writeText(qrData.address)}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n                <path d=\"M22 6v16h-16v-16h16zm2-2h-20v20h20v-20zm-24 17v-21h21v2h-19v19h-2z\"></path>\n              </svg>\n            </button>\n          </div>\n          <div className=\"popupSubtitle\">Amount</div>\n          <div className=\"popupBox\">\n            {/* <input type=\"text\" readOnly value={qrData.nftPrice / 1000000} /> ADA */}\n            <input type=\"text\" readOnly value={quantityData.quantity * 15} /> ADA\n            <button className=\"btnCopy\" onClick={() => navigator.clipboard.writeText(qrData.nftPrice / 1000000)}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\n                <path d=\"M22 6v16h-16v-16h16zm2-2h-20v20h20v-20zm-24 17v-21h21v2h-19v19h-2z\"></path>\n              </svg>\n            </button>\n          </div>\n          <div className=\"popupSubtitle\">Important</div>\n          <div className=\"popupBox red\" style={{ textAlign: \"left\" }}>\n            * You must use a Cardano Shelley-Era wallet such as\n            <a href=\"https://daedaluswallet.io/\" target=\"_blank\" rel=\"noreferrer\">\n              Daedalus\n            </a>\n            ,\n            <a href=\"https://yoroi-wallet.com/\" target=\"_blank\" rel=\"noreferrer\">\n              Yoroi\n            </a>\n            <br />\n            * It might take a minute your addressTransaction to be reflected after payment.\n            <br />\n            * It is based on the order in which Ada is transferred to the server wallet, <br />\n            &nbsp;&nbsp;&nbsp;&nbsp; not the order in which the purchase button was pressed.\n            <br />\n            * If the purchase fails or the amount does not match, <br />\n            &nbsp;&nbsp;&nbsp;&nbsp;The amount transferred will be automatically refunded excluding fees.\n            <br />\n          </div>\n        </div>\n      </div>\n      <div className=\"popupBg\" onClick={() => onClose()}></div>\n    </div>\n  );\n}\n\nexport default QrModal;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../styles/css/main.scss\";\n\nfunction QuantityModal({ data, open, onClose, onAction }) {\n  const [collectionData, setCollectionData] = useState({\n    nftNameKor: \"\",\n    imgUrl: \"\",\n    age: \"\",\n    description: \"\",\n    nftPrice: \"\",\n    targetQuantity: 0,\n    mintCount: 0,\n    closed: false,\n  });\n  const [soldOut, setSoldOut] = useState(false);\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    if (data) {\n      setCollectionData({ ...data });\n\n      // soldOut 제어\n      if (data.targetQuantity - data.mintCount <= 0) {\n        setSoldOut(true);\n      } else setSoldOut(false);\n\n      /* clearInterval(intervalVal);\n        intervalVal = setInterval(checkSoldOut, 10000);\n        return false; */\n    }\n  }, [data]);\n\n  return (\n    <div className=\"popupWrap\" style={{ display: open ? \"block\" : \"none\" }}>\n      <div className=\"popup3\" style={{ display: open ? \"block\" : \"none\" }}>\n        <button className=\"popupClose\" onClick={() => {\n          setQuantity(1)\n          onClose()\n        }}></button>\n        <div className=\"buyNumber\">\n          <div className=\"popupTitle\">Quantity</div>\n          <div className=\"quantity\">\n            <button className=\"quantity-button quantity-down\"\n              onClick={() => {\n                if (quantity > 1) {\n                  setQuantity(quantity - 1)\n                }\n              }}\n            />\n            <input readOnly type=\"number\" min=\"1\" max=\"10\" step=\"1\" value={quantity} />\n            <button className=\"quantity-button quantity-up\" onClick={() => {\n              if (quantity < 10) {\n                setQuantity(quantity + 1)\n              }\n\n            }} />\n            <div className=\"quantity-nav\"></div>\n          </div>\n        </div>\n        <div className=\"popupText\">\n          <div className=\"row\">\n            <div className=\"popupSubtitle\">Quantity</div>\n            <span className=\"blue\">{quantity}</span>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"popupSubtitle\">Price</div>\n            <span className=\"blue\">{15 * quantity}ADA</span>\n          </div>\n          <button className=\"btnBuy\" onClick={() => {\n            data.quantity = quantity;\n            setQuantity(1); // 일단 초기화.\n            onAction(collectionData)\n          }}>\n            BUY\n          </button>\n        </div>\n      </div>\n\n      <div className=\"popupBg\" onClick={() => {\n        setQuantity(1)\n        onClose()\n      }}></div>\n    </div>\n  );\n}\n\nexport default QuantityModal;\n","const kr = {\n  title: \"프로젝트 정보\",\n  desc: `동아시아에는 많은 신화, 설화, 동화가 있습니다.<br/>\n    이 이야기 속에는 많은 신과 요괴들이 등장하고 사람들과 함께하며 새로운 이야기들을 창조하였습니다.<br/>\n    이 이야기들이 Cardano와 만나 Cardanian과 함께 새로운 동화를 써내려 갑니다.<br/>\n    K-MONSTERZ를 통해 신, 요정, 요괴들이 당신을 만나 새로운 가치를 만들어 낼 것 입니다.<br/>\n    당신만을 지키는 신을 가지세요.<br/>\n    당신만을 위하는 요정을 가지세요.<br/>\n    당신과 함께 놀고 싶은 요괴가 있습니다.<br/>\n    K-MONSTERZ의 CNFT는 성장하는 스토리를 가지고 있습니다.<br/>\n    기대하세요. 이제 새로운 세계가 Cardano로 들어옵니다.`,\n};\n\nconst jp = {\n  title: \"プロジェクトについて\",\n  desc: `東アジアには多くの神話、物語、おとぎ話が伝わってきます。<br/> \n    この物語では、多くの神々や妖怪が登場し、人々との新しい物語を創造しました。<br/> \n    この話々とカルダノが出会って<br/> \n    新しい話を作るカルダニアンと緒に新しい童話を書き下ろします。<br/> \n    K-MONSTERZを通じて、神々、妖精、モンスターがあなたに出会い、新しい価値を生み出すでしょう。<br/> \n    あなたのためだけの神を所有してください。<br/> \n    あなただけを守る妖精を所有してください。<br/> \n    あなたと一緒に遊びたい妖怪がいます。<br/> \n    K-MONSTERZのCNFTには成長するストーリーを持っています。<br/> \n    待しててください。今、新しい世界がカルダノにやってきます。`,\n};\n\nconst en = {\n  title: \"About the project\",\n  desc: `There are many myths, tales and fairy tales in East Asia.<br/>\n    In this story, many gods and youkai appeared and created new stories with people.<br/>\n    These stories meet Cardano and work with Cardanian to write a new fairy tale.<br/>\n    Through K-MONSTERZ, gods, fairies, and monsters will meet you and create new values.<br/>\n    Have a god who protects only you.<br/>\n    Have a fairy just for you.<br/>\n    There are youkai who want to play with you.<br/>\n    K-MONSTERZ's CNFT has a growing story.<br/>\n    To expect. Now a new world is coming to Cardano.`,\n};\n\nexport default { kr, jp, en };\n","import { atom, selector } from \"recoil\";\n\n// 페이지 언어 설정\nexport const languageState = atom({\n  key: \"languageState\", // unique ID (with respect to other atoms/selectors)\n  default: \"en\", // default value (aka initial value)\n});\n\nexport const languageData = selector({\n  key: \"languageData\",\n  set: ({ set }, newValue) => set(languageState, newValue),\n});\n","const series1Data = {\n    \"GUMI (Common)\": {\n        id: 1,\n        closed: true,\n        name: \"GUMI (Common)\",\n        imgUrl: \"img/gumi(N).png\",\n        age: \"7(400)Years\",\n        description: \"She is a nine-tailed fox who can only become a human when he meets someone who truly loves him. Gumi, who has a lively personality, has only had unrequited love for 400 years. Gumi, who has always had unrequited love because of her young appearance, becomes infinitely shy in front of the person she likes. Can Gumi meet a human who loves her in Cardano?\",\n        remain: 29\n\n    },\n    \"GUMI (Rare)\": {\n        id: 2,\n        closed: true,\n        name: \"GUMI (Rare)\",\n        imgUrl: \"img/gumi(R).png\",\n        age: \"7(400)Years\",\n        description: \"She is a nine-tailed fox who can only become a human when he meets someone who truly loves him. Gumi, who has a lively personality, has only had unrequited love for 400 years. Gumi, who has always had unrequited love because of her young appearance, becomes infinitely shy in front of the person she likes. Can Gumi meet a human who loves her in Cardano?\",\n        remain: 0\n    },\n    \"DOBI (Common)\": {\n        id: 3,\n        closed: true,\n        name: \"DOBI (Common)\",\n        imgUrl: \"img/dobi(N).png\",\n        age: \"7(400)Years\",\n        description: \"It is a DOKAEBI that is born from things. This DOKAEBI was born from a sword on the battlefield. Born from the sword of a young soldier, his wish for play is strongly projected. The DOKAEBI is looking for a friend to play with him genuinely. Can the DOKAEBI meet a human who loves him in Cardano?\",\n        remain: 52\n    },\n    \"DOBI (Rare)\": {\n        id: 4,\n        closed: true,\n        name: \"DOBI (Rare)\",\n        imgUrl: \"img/dobi(R).png\",\n        age: \"7(400)Years\",\n        description: \"It is a DOKAEBI that is born from things. This DOKAEBI was born from a sword on the battlefield. Born from the sword of a young soldier, his wish for play is strongly projected. The DOKAEBI is looking for a friend to play with him genuinely. Can the DOKAEBI meet a human who loves him in Cardano?\",\n        remain: 0\n    },\n}\n\nexport default series1Data;","const series2Data = {\n    \"GUMI (Common)\": {\n        id: 9,\n        closed: false,\n        name: \"GUMI (Common)\",\n        imgUrl: \"img/gumi2(N).png\",\n        age: \"16(409)Years\",\n        description: \"GUMI's tail, which had not grown before, began to grow. GUMI found someone she loved so much in Cardano. Gumi, who has become seven tails, greets you. Can you be the love of Gumi? Remember that you have to be with all the times of Gumi to become the true love of Gumi.\",\n        remain: 400\n    },\n    \"GUMI (Rare)\": {\n        id: 6,\n        closed: false,\n        name: \"GUMI (Rare)\",\n        imgUrl: \"img/gumi2(R).png\",\n        age: \"16(409)Years\",\n        description: \"GUMI's tail, which had not grown before, began to grow. GUMI found someone she loved so much in Cardano. Gumi, who has become seven tails, greets you. Can you be the love of Gumi? Remember that you have to be with all the times of Gumi to become the true love of Gumi.\",\n        remain: 200\n    },\n    \"DOBI (Common)\": {\n        id: 5,\n        closed: false,\n        name: \"DOBI (Common)\",\n        imgUrl: \"img/dobi2(N).png\",\n        age: \"16(109)Years\",\n        description: \"DOBI, born of a sword, has a sword in his hand. He's now fighting like a game. It depends on Cardano's choice whether DOBI will become a true warrior or a monster. Remember, the only person who watched all his times is the one who can guide DOBI's fight right.\",\n        remain: 400,\n    },\n    \"DOBI (Rare)\": {\n        id: 8,\n        closed: false,\n        name: \"DOBI (Rare)\",\n        imgUrl: \"img/dobi2(R).png\",\n        age: \"16(109)Years\",\n        description: \"DOBI, born of a sword, has a sword in his hand. He's now fighting like a game. It depends on Cardano's choice whether DOBI will become a true warrior or a monster. Remember, the only person who watched all his times is the one who can guide DOBI's fight right.\",\n        remain: 200,\n    },\n    \"KIMCHASA (Unique)\": {\n        id: 7,\n        closed: false,\n        name: \"KIMCHASA (Unique)\",\n        imgUrl: \"img/kimchasa(U).png\",\n        age: \"18(1004)Years\",\n        description: \"KIMCHASA is an angel who manages death. He has absolute power over death. This angel peacefully leads the soul of the dead to the afterlife. KIMCHASA hates confusion that destroys peace like war.So he's monitoring the DOBI. If DOBI becomes a monster in Cardano, KIMCHASA wants to kill his soul.\",\n        remain: 200\n    },\n}\n\nexport default series2Data;","import React, { useState, useEffect } from \"react\";\nimport \"../styles/css/main.scss\";\n\nimport { ntfList, ntfData } from \"../services/collection\";\nimport DetailModal from \"../screens/components/DetailModal\";\nimport QrModal from \"../screens/components/QrModal\";\nimport QuantityModal from \"../screens/components/QuantityModal\";\n\nimport transData from \"../config/tranLang\";\nimport { languageState } from \"../store/app\";\nimport { useRecoilValue } from \"recoil\";\nimport series1Data from \"../data/Series1\";\nimport series2Data from \"../data/Series2\";\n\nconst monthName = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nfunction Main() {\n  // 카운트 제어\n  const dday = new Date(Date.UTC(2021, 9, 3, 13, 0, 0));\n  const now = new Date(); //현재 날짜 가져오기\n\n\n  const [distanceTime, setDistanceTime] = useState();\n  const [adaQuantity, setAdaQuantity] = useState(0);\n\n  // 번역 제어\n  const language = useRecoilValue(languageState);\n\n  const distance = dday.getTime() - Date.now(); // UTC 기준 남은 시간.\n  let date = (Math.floor(distance / (1000 * 60 * 60 * 24)));\n  let hour = (Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  let minutes = (Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)));\n  let second = (Math.floor((distance % (1000 * 60)) / 1000));\n  // setDistanceTime();\n  if (hour < 10) {\n    hour = \"0\" + hour;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (second < 10) {\n    second = \"0\" + second;\n  }\n  let initDistanceTime = `${date}Days ${hour}:${minutes}:${second}`;\n  // setDistanceTime(`뿌우`);\n\n  const counter = () => {\n    setInterval(function () {\n      const distance = dday.getTime() - Date.now(); // UTC 기준 남은 시간.\n      let date = (Math.floor(distance / (1000 * 60 * 60 * 24)));\n      let hour = (Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n      let minutes = (Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)));\n      let second = (Math.floor((distance % (1000 * 60)) / 1000));\n      // setDistanceTime();\n      if (hour < 10) {\n        hour = \"0\" + hour;\n      }\n      if (minutes < 10) {\n        minutes = \"0\" + minutes;\n      }\n      if (second < 10) {\n        second = \"0\" + second;\n      }\n      setDistanceTime(`${date}Days ${hour}:${minutes}:${second}`);\n\n    }, 1000);\n  };\n\n  // 데이터 제어\n  const [collectionList, setCollectionList] = useState(null);\n  const closed = dday.getMonth() !== now.getUTCMonth() || dday.getDate() < now.getUTCDate() ? true : false;\n  // const [soldOut, setSoldOut] =  useState(false);\n\n  // 팝업1 제어 - 상세 정보 모달.\n  const [popup1Open, setPopup1Open] = useState(false);\n  const [popup1Data, setPopup1Data] = useState(null);\n\n  // 팝업2 제어\n  const [popup2Open, setPopup2Open] = useState(false);\n  const [popup2Data, setPopup2Data] = useState(null);\n\n  // 팝업3 제어\n  const [popup3Open, setPopup3Open] = useState(false);\n  const [popup3Data, setPopup3Data] = useState({});\n\n  counter();\n  // 코인 리스트 조회\n  useEffect(() => {\n    (async () => {\n      // counter();\n      // const { data } = await ntfList();\n      // if (data && data.return_code === 200) setCollectionList(data.response);\n    })();\n\n  }, []);\n\n\n\n  // 코인 세부 정보 조회\n  const collectClick = async (nftId) => {\n    const { data } = await ntfData(nftId);\n    if (data && data.return_code === 200) {\n      const detilData = { ...data.response, closed: closed };\n      setPopup1Data(detilData);\n      setPopup1Open(true);\n    }\n  };\n\n  // QR 모달 오픈\n  const openQrModal = (data) => {\n    setPopup3Open(false);\n    setPopup2Open(true);\n    setPopup2Data(data);\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"contentsWrap\">\n        <div className=\"mainImg\">\n          <div className=\"characterWrap\">\n            <div className=\"mainTitle\" style={{ display: !closed ? \"block\" : \"none\" }}>\n              COMING SOON\n              <br />\n              <span className=\"countDate\">{monthName[dday.getUTCMonth()]} {dday.getUTCDate()}th {dday.getUTCHours() + (dday.getUTCHours() > 12 ? \"PM\" : \"AM\")} (UTC)</span>\n            </div>\n            <div className=\"mainTitle2\" style={{ display: closed ? \"block\" : \"none\" }}>\n              <b>Series2</b>\n              <br />\n              <span className=\"mainSubtitle\">\n                Teenage and Special NFT\n                <br />\n              </span>\n              <div>\n                <span className=\"countDate\">{monthName[dday.getUTCMonth()]} {dday.getUTCDate()}th {dday.getUTCHours() + (dday.getUTCHours() > 12 ? \"PM\" : \"AM\")} (UTC)</span>\n                <p className=\"countDown\">{distanceTime === undefined ? initDistanceTime : distanceTime}</p>\n              </div>\n            </div>\n            <div className=\"character\"></div>\n            {/* <button className=\"btnBuy\" onClick={() => setPopup3Open(true)}>\n              BUY NOW!\n            </button> */}\n          </div>\n          <div className=\"mainBottom\"></div>\n        </div>\n        <div className=\"contents\">\n          <div className=\"contentsTitle\">{transData[language].title}</div>\n          <div className=\"contentsText\" dangerouslySetInnerHTML={{ __html: transData[language].desc }}></div>\n          <div className=\"blackArea\"></div>\n          <div className=\"contentsTitle\">Series 2</div>\n          <div className=\"contentsBox\">\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series2Data[\"GUMI (Common)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"soldOut\"></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/gumi2(N).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">GUMI (Common)</div>\n            </div>\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series2Data[\"GUMI (Rare)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"soldOut\"></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/gumi2(R).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">GUMI (Rare)</div>\n            </div>\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series2Data[\"DOBI (Common)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"soldOut\"></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/dobi2(N).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">DOBI (Common)</div>\n            </div>\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series2Data[\"DOBI (Rare)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"soldOut\"></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/dobi2(R).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">DOBI (Rare)</div>\n            </div>\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series2Data[\"KIMCHASA (Unique)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"soldOut\"></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/kimchasa(U).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">KIMCHASA (Unique)</div>\n            </div>\n          </div>\n          <div className=\"blackArea\"></div>\n          <div className=\"contentsTitle\">Series 1</div>\n          <div className=\"contentsBox\">\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series1Data[\"GUMI (Common)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"closed\" style={{ display: \"block\" }}></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/gumi(N).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">GUMI (Common)</div>\n            </div>\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series1Data[\"GUMI (Rare)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"closed\" style={{ display: \"block\" }}></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/gumi(R).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">GUMI (Rare)</div>\n            </div>\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series1Data[\"DOBI (Common)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"closed\" style={{ display: \"block\" }}></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/dobi(N).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">DOBI (Common)</div>\n            </div>\n            <div className=\"collection\" onClick={() => {\n              setPopup1Data(\n                series1Data[\"DOBI (Rare)\"]\n              )\n              setPopup1Open(true)\n            }\n            }>\n              <div className=\"collectionImg\">\n                <div className=\"closed\" style={{ display: \"block\" }}></div>\n                <div className=\"imgArea\">\n                  <img src={\"img/dobi(R).png\"} alt=\"copy url\" />\n                </div>\n              </div>\n              <div className=\"collectionText\">DOBI (Rare)</div>\n            </div>\n            {/* <div className=\"collection\">\n              <div className=\"collectionImg\">\n                <div className=\"imgArea\">\n                </div>\n              </div>\n              <div className=\"collectionText\">gumi</div>\n            </div> */}\n          </div>\n          {/* 에이다 수량 조절 모달. */}\n          <QuantityModal\n            data={popup3Data}\n            open={popup3Open}\n            onClose={() => {\n              setPopup3Open(false)\n            }}\n            onAction={() => openQrModal()}\n          />\n          <DetailModal\n            data={popup1Data}\n            open={popup1Open}\n            onClose={() => setPopup1Open(false)}\n            onAction={(data) => openQrModal(data)}\n          />\n          <QrModal\n            data={popup2Data}\n            quantityData={popup3Data}\n            open={popup2Open}\n            onClose={() => setPopup2Open(false)}\n          />\n        </div>\n        <div className=\"blackArea\"></div>\n        <div className=\"blackArea\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/guide3.e97f5e47.png\";","export default __webpack_public_path__ + \"static/media/guide4.79d60c7a.png\";","export default __webpack_public_path__ + \"static/media/guide5.6f7f1cba.png\";","import React from \"react\";\nimport \"../styles/css/guide.scss\";\nimport guide3 from \"../styles/img/guide3.png\";\nimport guide4 from \"../styles/img/guide4.png\";\nimport guide5 from \"../styles/img/guide5.png\";\n\nfunction Guide() {\n  return (\n    <div className=\"guide\">\n      <div className=\"contentsWrap\">\n        <div className=\"contents\">\n          <div className=\"blackArea\"></div>\n          <div className=\"blackArea\"></div>\n          <div className=\"guideWrap\">\n            <div className=\"contentsTitle\">Guide</div>\n            <div className=\"contentsText\">1. Click the buy button.</div>\n            <div className=\"guideImg\">\n              <img src={guide5} alt=\"guide1\" />\n            </div>\n            <div className=\"contentsText\">2. After choosing the quantity, Click the buy button.</div>\n            <div className=\"guideImg\">\n              <img src={guide4} alt=\"guide2\" />\n            </div>\n            <div className=\"contentsText\">\n              3. Copy both the Amount and the Wallet Address.\n              <br /> Send the Amount to the Wallet Address from your Yoroi or Daedalus wallet.\n            </div>\n            <div className=\"guideImg\">\n              <img src={guide3} alt=\"guide3\" />\n            </div>\n            <div className=\"contentsText\">4. Wait for your transaction to process.</div>\n            <div className=\"contentsText\">\n              5. If the purchase was successful, NFT will be sent to the wallet address that payment was sent from.\n            </div>\n            <div className=\"contentsText\">\n              6. If the purchase fails or the amount does not match, The amount transferred will be automatically\n              refunded excluding fees.\n            </div>\n            <div className=\"contentsText\">\n              <span>\n                * It is based on the order in which Ada is transferred to the server wallet, not the order in which the\n                purchase button was pressed.\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"blackArea\"></div>\n      </div>\n      <div className=\"guideBg\">\n        <div className=\"guideBottom\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Guide;\n","import React from \"react\";\nimport \"../styles/css/guide.scss\";\n\nfunction Roadmap() {\n  return (\n    <div className=\"guide\">\n      <div className=\"contentsWrap\">\n        <div className=\"contents\">\n          <div className=\"blackArea\"></div>\n          <div className=\"blackArea\"></div>\n          <div className=\"guideWrap\">\n            <div className=\"contentsTitle\">Roadmap</div>\n            <div className=\"contentsText\">\n              Our NFTs are designed to purchase NFTs that are finally sold only after continuing to purchase by series.\n              <br />\n              <br />\n              Our goal is to make short animations.\n              <br />\n              <br />\n              The characters of these NFTs appear.\n              <br />\n              <br />\n              The final NFT buyer of the series is embodied as a character in the anime.\n              <br />\n              <br />\n              Please remember our goals.\n            </div>\n          </div>\n        </div>\n        <div className=\"blackArea\"></div>\n      </div>\n      <div className=\"guideBg\">\n        <div className=\"guideBottom\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Roadmap;\n","import React from 'react';\nimport '../../styles/css/style.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"footerWrap\">\n      <div className=\"footerArea\">\n        <div className=\"footerTop\">\n          <button className=\"logoBottom\" onClick={() => window.location.href=\"/\"}></button>\n        </div>\n        <div className=\"footerBottom\">\n          <address>\n            Team K-Monster\n            <br />\n            Copyright ⓒ Team K-Monster. All rights reserved\n            <br />\n          </address>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import \"./App.css\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { isIE, isEdge } from \"react-device-detect\";\nimport { RecoilRoot } from \"recoil\";\n\nimport \"./styles/css/nanumsquareround.css\";\n\nimport Header from \"./screens/frame/Header\";\nimport Main from \"./screens/Main\";\nimport Guide from \"./screens/Guide\";\nimport Roadmap from \"./screens/Roadmap\";\nimport Footer from \"./screens/frame/Footer\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <RecoilRoot>\n        <Header />\n        {isIE || isEdge ? alert(\"IE / Edge is not supported. Download Chrome/Opera/Firefox\") : null}\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/Guide\" component={Guide} />\n        <Route path=\"/Roadmap\" component={Roadmap} />\n        <Footer />\n      </RecoilRoot>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}